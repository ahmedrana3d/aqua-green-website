/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useControls } from "leva";

export function ThirdCharacterCrying(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "models/MaintenanceDirty-proc-meshopt-m.glb"
  );
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    if (actions) {
      Object.values(actions).forEach((action) => {
        if (action && action.play) {
          action.play();
        }
      });
    }
  }, []);




  return (
    <group ref={group} position={[2 , 0 , -3.0]} {...props} dispose={null}>
      <group name="Scene">
        <group name="MaintenanceDirtyglb">
          <group name="NGon139" position={[-0.59, 0, 1.106]}>
            <primitive object={nodes.Point260} />
            <mesh
              name="Ch1_Mesh03"
              castShadow
              receiveShadow
              geometry={nodes.Ch1_Mesh03.geometry}
              material={nodes.Ch1_Mesh03.material}
              position={[-0.154, 0.101, -0.278]}
              rotation={[0.012, 1.232, 0.093]}
              scale={[-0.118, 0.12, 0.118]}
            />
            <mesh
              name="Ch1_Mesh04"
              castShadow
              receiveShadow
              geometry={nodes.Ch1_Mesh04.geometry}
              material={nodes.Ch1_Mesh04.material}
              position={[-0.298, 0.096, 0.001]}
              rotation={[0.034, 1.05, 0.005]}
              scale={[0.122, 0.123, 0.122]}
            />
            <mesh
              name="Ch1_Mesh01"
              castShadow
              receiveShadow
              geometry={nodes.Ch1_Mesh01.geometry}
              material={nodes.Ch1_Mesh01.material}
              position={[0.091, 0.257, 0.052]}
              scale={0.25}
            />
            <mesh
              name="Object128"
              castShadow
              receiveShadow
              geometry={nodes.Object128.geometry}
              material={nodes.Object128.material}
              position={[-0.071, 0.063, -0.233]}
              rotation={[0.012, 1.232, 0.093]}
              scale={[-0.166, 0.168, 0.166]}
            />
            <mesh
              name="Object127"
              castShadow
              receiveShadow
              geometry={nodes.Object127.geometry}
              material={nodes.Object127.material}
              position={[-0.213, 0.059, 0.049]}
              rotation={[0.034, 1.05, 0.005]}
              scale={[0.168, 0.17, 0.168]}
            />
            <skinnedMesh
              name="Object126"
              geometry={nodes.Object126.geometry}
              material={nodes.Object126.material}
              skeleton={nodes.Object126.skeleton}
              position={[0.167, 0.628, 0.044]}
            />
            <skinnedMesh
              name="Object130"
              geometry={nodes.Object130.geometry}
              material={nodes.Object130.material}
              skeleton={nodes.Object130.skeleton}
              position={[0.167, 0.628, 0.044]}
            />
            <skinnedMesh
              name="Object129"
              geometry={nodes.Object129.geometry}
              material={nodes.Object129.material}
              skeleton={nodes.Object129.skeleton}
              position={[0.167, 0.628, 0.044]}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("models/MaintenanceDirty-proc-meshopt-m.glb");
